{"ast":null,"code":"var _jsxFileName = \"C:\\\\developing\\\\spotify-like-web-main\\\\src\\\\pages\\\\PlaylistDetail\\\\SongItem\\\\SongItem.tsx\";\nimport { Play } from \"../../../assets/Play\";\nimport { formatDate } from \"../../../utils/formatDate\";\nimport { millisToMinutesAndSeconds } from \"../../../utils/msToMinutes\";\nimport styles from \"./SongItem.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SongItem = ({\n  song,\n  index,\n  songClicked,\n  current\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: song && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [styles.Item, song.track.preview_url ? styles.Enabled : styles.Disabled].join(\" \"),\n      onClick: songClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Index,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: current ? {\n            color: \"#1db954\"\n          } : {\n            color: \"white\"\n          },\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Title,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.track.album.images[0].url,\n          alt: \"cover img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.NameContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.Name,\n            style: current ? {\n              color: \"#1db954\"\n            } : {\n              color: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: song.track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), song.track.explicit && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.Explicit,\n            children: \"e\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: [styles.Artist, song.track.explicit ? styles.Artist_sub : styles.Artist_badg].join(\", \"),\n            children: song.track.artists[0].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: song.track.album.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formatDate(song.added_at)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Length,\n        children: [millisToMinutesAndSeconds(song.track.duration_ms), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.More,\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = SongItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongItem\");","map":{"version":3,"sources":["C:/developing/spotify-like-web-main/src/pages/PlaylistDetail/SongItem/SongItem.tsx"],"names":["Play","formatDate","millisToMinutesAndSeconds","styles","SongItem","song","index","songClicked","current","Item","track","preview_url","Enabled","Disabled","join","Index","color","Title","album","images","url","NameContainer","Name","name","explicit","Explicit","Artist","Artist_sub","Artist_badg","artists","added_at","Length","duration_ms","More"],"mappings":"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","sourcesContent":["import { Play } from \"../../../assets/Play\";\nimport { Track } from \"../../../types/Track\";\nimport { formatDate } from \"../../../utils/formatDate\";\nimport { millisToMinutesAndSeconds } from \"../../../utils/msToMinutes\";\nimport styles from \"./SongItem.module.scss\";\n\ntype SongItemPros = {\n  song: Track;\n  index: number;\n  songClicked: () => void;\n  current: boolean;\n};\n\nexport const SongItem = ({\n  song,\n  index,\n  songClicked,\n  current,\n}: SongItemPros) => {\n  return (\n    <>\n      {song && (\n        <div\n          className={[\n            styles.Item,\n            song.track.preview_url ? styles.Enabled : styles.Disabled,\n          ].join(\" \")}\n          onClick={songClicked}\n        >\n          <div className={styles.Index}>\n            <span style={current ? { color: \"#1db954\" } : { color: \"white\" }}>\n              {index + 1}\n            </span>\n            <button>\n              <Play />\n            </button>\n          </div>\n\n          <div className={styles.Title}>\n            <img src={song.track.album.images[0].url} alt=\"cover img\" />\n            <div className={styles.NameContainer}>\n              <div\n                className={styles.Name}\n                style={current ? { color: \"#1db954\" } : { color: \"white\" }}\n              >\n                <span>{song.track.name}</span>\n              </div>\n              {song.track.explicit && (\n                <span className={styles.Explicit}>e</span>\n              )}\n              <span\n                className={[\n                  styles.Artist,\n                  song.track.explicit ? styles.Artist_sub : styles.Artist_badg,\n                ].join(\", \")}\n              >\n                {song.track.artists[0].name}\n              </span>\n            </div>\n          </div>\n          <div>{song.track.album.name}</div>\n          <div>{formatDate(song.added_at)}</div>\n          <div className={styles.Length}>\n            {millisToMinutesAndSeconds(song.track.duration_ms)}\n            <button className={styles.More}>...</button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}