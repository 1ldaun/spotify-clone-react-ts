{"ast":null,"code":"var _jsxFileName = \"C:\\\\developing\\\\spotify-like-web-main\\\\src\\\\components\\\\Player\\\\Player.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Like } from \"../../assets/Like\";\nimport { Play } from \"../../assets/Play\";\nimport { Pause } from \"../../assets/Pause\";\nimport { Volume } from \"../../assets/Volume\";\nimport styles from \"./Player.module.scss\";\nimport Sound from \"react-sound\";\nimport { millisToMinutesAndSeconds } from \"../../utils/msToMinutes\";\nimport { useBar } from \"../../utils/useBar\";\nimport { VolumeMuted } from \"../../assets/VolumeMuted\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  playPause,\n  song,\n  playing\n}) => {\n  _s();\n\n  const [time, setTime] = useState(0);\n  const timeRef = useRef(null);\n  const [progress, setProgress] = useState(0);\n  const [volume, setVolume] = useState(70);\n  const volumeRef = useRef(null);\n  const [mute, setMute] = useState(false);\n  const barCallBack = useBar;\n  useEffect(() => {\n    // Adjust time when progress bar is clicked\n    setTime(progress * 30000 / 100);\n  }, [progress]);\n  useEffect(() => {\n    //Reset progress if the song change\n    setProgress(0);\n    setTime(0);\n  }, [song]);\n  useEffect(() => {\n    if (volume < 5) {\n      setMute(true);\n    } else {\n      setMute(false);\n    }\n  }, [volume]);\n\n  if (!song) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Player,\n      children: [/*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Song,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.Img,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.track.album.images[0].url,\n              alt: \"song\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.Infos,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Name,\n              children: song.track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Artist,\n              children: song.track.artists[0].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.Like,\n            children: /*#__PURE__*/_jsxDEV(Like, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Controls,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: playPause,\n              children: playing ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 28\n              }, this) : /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.BarContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: millisToMinutesAndSeconds(time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Wrapper,\n              onClick: event => barCallBack(event, timeRef, setProgress),\n              ref: timeRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.Bar,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.Progress,\n                  style: {\n                    transform: `translateX(-${100 - progress}%)`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  left: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"0:30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Volume,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setMute(!mute),\n              children: mute ? /*#__PURE__*/_jsxDEV(VolumeMuted, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(Volume, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.Wrapper,\n            onClick: event => barCallBack(event, volumeRef, setVolume),\n            ref: volumeRef,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Bar,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.Progress,\n                style: {\n                  transform: `translateX(-${mute ? \"100\" : 100 - volume}%)`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                left: `${mute ? \"0\" : volume}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), song.track.preview_url && /*#__PURE__*/_jsxDEV(Sound, {\n        url: song.track.preview_url,\n        playStatus: playing ? \"PLAYING\" : \"PAUSED\" //@ts-ignore\n        ,\n        onPlaying: ({\n          position\n        }) => {\n          setTime(position);\n          setProgress(position * 100 / 30000);\n        },\n        onFinishedPlaying: () => playPause(),\n        volume: mute ? 0 : volume,\n        position: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Player, \"BisqjR4h3dwUE0ntYk6YWxhJi/o=\");\n\n_c = Player;\n\nconst mapStateToProps = state => {\n  return {\n    song: state.playing.song,\n    playing: state.playing.playing\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    playPause: () => dispatch({\n      type: \"playpause\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/developing/spotify-like-web-main/src/components/Player/Player.tsx"],"names":["useEffect","useRef","useState","connect","Like","Play","Pause","Volume","styles","Sound","millisToMinutesAndSeconds","useBar","VolumeMuted","Player","playPause","song","playing","time","setTime","timeRef","progress","setProgress","volume","setVolume","volumeRef","mute","setMute","barCallBack","Song","Img","track","album","images","url","Infos","Name","name","Artist","artists","Controls","BarContainer","Wrapper","event","Bar","Progress","transform","left","preview_url","position","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Like } from \"../../assets/Like\";\nimport { Play } from \"../../assets/Play\";\nimport { Pause } from \"../../assets/Pause\";\nimport { Volume } from \"../../assets/Volume\";\nimport styles from \"./Player.module.scss\";\nimport Sound from \"react-sound\";\nimport { millisToMinutesAndSeconds } from \"../../utils/msToMinutes\";\nimport { useBar } from \"../../utils/useBar\";\nimport { VolumeMuted } from \"../../assets/VolumeMuted\";\nimport { Track } from \"../../types/Track\";\n\ntype PlayerProps = {\n  playPause: () => void;\n  song: Track;\n  playing: boolean;\n};\n\nconst Player = ({ playPause, song, playing }: PlayerProps) => {\n  const [time, setTime] = useState(0);\n  const timeRef = useRef<HTMLDivElement | null>(null);\n  const [progress, setProgress] = useState(0);\n\n  const [volume, setVolume] = useState(70);\n  const volumeRef = useRef<HTMLDivElement | null>(null);\n\n  const [mute, setMute] = useState(false);\n\n  const barCallBack = useBar;\n\n  useEffect(() => {\n    // Adjust time when progress bar is clicked\n    setTime((progress * 30000) / 100);\n  }, [progress]);\n\n  useEffect(() => {\n    //Reset progress if the song change\n    setProgress(0);\n    setTime(0);\n  }, [song]);\n\n  useEffect(() => {\n    if (volume < 5) {\n      setMute(true);\n    } else {\n      setMute(false);\n    }\n  }, [volume]);\n\n  if (!song) {\n    return null;\n  } else {\n    return (\n      <div className={styles.Player}>\n        <footer>\n          <div className={styles.Song}>\n            <div className={styles.Img}>\n              <img src={song.track.album.images[0].url} alt=\"song\" />\n            </div>\n            <div className={styles.Infos}>\n              <div className={styles.Name}>{song.track.name}</div>\n              <div className={styles.Artist}>{song.track.artists[0].name}</div>\n            </div>\n            <div className={styles.Like}>\n              <Like />\n            </div>\n          </div>\n\n          <div className={styles.Controls}>\n            <div>\n              <button onClick={playPause}>\n                {playing ? <Pause /> : <Play />}\n              </button>\n            </div>\n            <div className={styles.BarContainer}>\n              <div>{millisToMinutesAndSeconds(time)}</div>\n              <div\n                className={styles.Wrapper}\n                onClick={(event) => barCallBack(event, timeRef, setProgress)}\n                ref={timeRef}\n              >\n                <div className={styles.Bar}>\n                  <div\n                    className={styles.Progress}\n                    style={{ transform: `translateX(-${100 - progress}%)` }}\n                  />\n                </div>\n                <button style={{ left: `${progress}%` }} />\n              </div>\n              <div>0:30</div>\n            </div>\n          </div>\n\n          <div className={styles.Volume}>\n            <div>\n              <button onClick={() => setMute(!mute)}>\n                {mute ? <VolumeMuted /> : <Volume />}\n              </button>\n            </div>\n            <div\n              className={styles.Wrapper}\n              onClick={(event) => barCallBack(event, volumeRef, setVolume)}\n              ref={volumeRef}\n            >\n              <div className={styles.Bar}>\n                <div\n                  className={styles.Progress}\n                  style={{\n                    transform: `translateX(-${mute ? \"100\" : 100 - volume}%)`,\n                  }}\n                />\n              </div>\n              <button style={{ left: `${mute ? \"0\" : volume}%` }} />\n            </div>\n          </div>\n        </footer>\n        {song.track.preview_url && (\n          <Sound\n            url={song.track.preview_url}\n            playStatus={playing ? \"PLAYING\" : \"PAUSED\"}\n            //@ts-ignore\n            onPlaying={({ position }) => {\n              setTime(position);\n              setProgress((position * 100) / 30000);\n            }}\n            onFinishedPlaying={() => playPause()}\n            volume={mute ? 0 : volume}\n            position={time}\n          />\n        )}\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state: {\n  playing: { song: Track; playing: boolean };\n}) => {\n  return {\n    song: state.playing.song,\n    playing: state.playing.playing,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: (playPause: { type: string }) => void\n) => {\n  return {\n    playPause: () => dispatch({ type: \"playpause\" }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\n"]},"metadata":{},"sourceType":"module"}