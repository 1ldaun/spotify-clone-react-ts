{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nimport Cookies from \"universal-cookie\";\nconst baseUrl = \"https://api.spotify.com/v1\";\nconst cookies = new Cookies();\n\nasync function getAuthorizationToken() {\n  return axios.post(\"https://accounts.spotify.com/api/token\", qs.stringify({\n    grant_type: \"client_credentials\",\n    client_id: process.env.REACT_APP_CLIENT_ID,\n    client_secret: process.env.REACT_APP_CLLIENT_SECRET\n  }), {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(function (response) {\n    cookies.set(\"auth\", response.data.access_token, {\n      maxAge: response.data.expires_in\n    });\n  });\n}\n\nconst getAuth = async () => {\n  let auth = cookies.get(\"auth\");\n\n  if (!auth) {\n    await getAuthorizationToken();\n    auth = cookies.get(\"auth\");\n  }\n\n  return auth;\n};\n\nexport async function GetPlaylists() {\n  const auth = await getAuth();\n  return axios.get(baseUrl + \"/browse/featured-playlists\", {\n    headers: {\n      Authorization: `Bearer ${auth}`\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(e => {\n    console.log(e);\n  });\n}\n_c = GetPlaylists;\nexport async function GetPlaylistDetail(idPlayslit) {\n  const auth = await getAuth();\n  return axios.get(baseUrl + \"/playlists/\" + idPlayslit, {\n    headers: {\n      Authorization: `Bearer ${auth}`\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(e => {\n    console.log(e);\n  });\n}\n_c2 = GetPlaylistDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetPlaylists\");\n$RefreshReg$(_c2, \"GetPlaylistDetail\");","map":{"version":3,"sources":["C:/developing/spotify-like-web-main/src/API.ts"],"names":["axios","qs","Cookies","baseUrl","cookies","getAuthorizationToken","post","stringify","grant_type","client_id","process","env","REACT_APP_CLIENT_ID","client_secret","REACT_APP_CLLIENT_SECRET","headers","then","response","set","data","access_token","maxAge","expires_in","getAuth","auth","get","GetPlaylists","Authorization","catch","e","console","log","GetPlaylistDetail","idPlayslit"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,4BAAhB;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;;AAEA,eAAeG,qBAAf,GAAuC;AACrC,SAAOL,KAAK,CACTM,IADI,CAEH,wCAFG,EAGHL,EAAE,CAACM,SAAH,CAAa;AACXC,IAAAA,UAAU,EAAE,oBADD;AAEXC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,mBAFZ;AAGXC,IAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAHhB,GAAb,CAHG,EAQH;AACEC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADX,GARG,EAcJC,IAdI,CAcC,UAAUC,QAAV,EAAoB;AACxBb,IAAAA,OAAO,CAACc,GAAR,CAAY,MAAZ,EAAoBD,QAAQ,CAACE,IAAT,CAAcC,YAAlC,EAAgD;AAC9CC,MAAAA,MAAM,EAAEJ,QAAQ,CAACE,IAAT,CAAcG;AADwB,KAAhD;AAGD,GAlBI,CAAP;AAmBD;;AAED,MAAMC,OAAO,GAAG,YAAY;AAC1B,MAAIC,IAAI,GAAGpB,OAAO,CAACqB,GAAR,CAAY,MAAZ,CAAX;;AAEA,MAAI,CAACD,IAAL,EAAW;AACT,UAAMnB,qBAAqB,EAA3B;AACAmB,IAAAA,IAAI,GAAGpB,OAAO,CAACqB,GAAR,CAAY,MAAZ,CAAP;AACD;;AAED,SAAOD,IAAP;AACD,CATD;;AAWA,OAAO,eAAeE,YAAf,GAA8B;AACnC,QAAMF,IAAI,GAAG,MAAMD,OAAO,EAA1B;AAEA,SAAOvB,KAAK,CACTyB,GADI,CACAtB,OAAO,GAAG,4BADV,EACwC;AAC3CY,IAAAA,OAAO,EAAE;AACPY,MAAAA,aAAa,EAAG,UAASH,IAAK;AADvB;AADkC,GADxC,EAMJR,IANI,CAMEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACE,IAAhB;AACD,GARI,EASJS,KATI,CASGC,CAAD,IAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAXI,CAAP;AAYD;KAfqBH,Y;AAiBtB,OAAO,eAAeM,iBAAf,CAAiCC,UAAjC,EAAqD;AAC1D,QAAMT,IAAI,GAAG,MAAMD,OAAO,EAA1B;AAEA,SAAOvB,KAAK,CACTyB,GADI,CACAtB,OAAO,GAAG,aAAV,GAA0B8B,UAD1B,EACsC;AACzClB,IAAAA,OAAO,EAAE;AACPY,MAAAA,aAAa,EAAG,UAASH,IAAK;AADvB;AADgC,GADtC,EAMJR,IANI,CAMEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACE,IAAhB;AACD,GARI,EASJS,KATI,CASGC,CAAD,IAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAXI,CAAP;AAYD;MAfqBG,iB","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\nimport Cookies from \"universal-cookie\";\nconst baseUrl = \"https://api.spotify.com/v1\";\n\nconst cookies = new Cookies();\n\nasync function getAuthorizationToken() {\n  return axios\n    .post(\n      \"https://accounts.spotify.com/api/token\",\n      qs.stringify({\n        grant_type: \"client_credentials\",\n        client_id: process.env.REACT_APP_CLIENT_ID,\n        client_secret: process.env.REACT_APP_CLLIENT_SECRET,\n      }),\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n      }\n    )\n    .then(function (response) {\n      cookies.set(\"auth\", response.data.access_token, {\n        maxAge: response.data.expires_in,\n      });\n    });\n}\n\nconst getAuth = async () => {\n  let auth = cookies.get(\"auth\");\n\n  if (!auth) {\n    await getAuthorizationToken();\n    auth = cookies.get(\"auth\");\n  }\n\n  return auth;\n};\n\nexport async function GetPlaylists() {\n  const auth = await getAuth();\n\n  return axios\n    .get(baseUrl + \"/browse/featured-playlists\", {\n      headers: {\n        Authorization: `Bearer ${auth}`,\n      },\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n}\n\nexport async function GetPlaylistDetail(idPlayslit: string) {\n  const auth = await getAuth();\n\n  return axios\n    .get(baseUrl + \"/playlists/\" + idPlayslit, {\n      headers: {\n        Authorization: `Bearer ${auth}`,\n      },\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}