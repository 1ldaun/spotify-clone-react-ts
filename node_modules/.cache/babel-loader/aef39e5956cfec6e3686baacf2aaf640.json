{"ast":null,"code":"var _jsxFileName = \"C:\\\\developing\\\\spotify-like-web-main\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport styles from \"./App.module.scss\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport Player from \"./components/Player/Player\";\nimport Playlists from \"./pages/Playlists/Playlists\";\nimport PlaylistDetail from \"./pages/PlaylistDetail/PlaylistDetail\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  playlists,\n  initPlaylists\n}) => {\n  _s();\n\n  //  const [error, setError] = useState<null | string>();\n\n  /*    const loadPlaylists = useCallback(async () => {\n  \n          if (data?.playlists) {\n              initPlaylists(data?.playlists?.items);\n          }, [initPlaylists]);*/\n  useEffect(() => {\n    let data = {\n      playlists: {\n        href: 'string',\n        items: [{\n          collaborative: false,\n          description: 'desc',\n          external_urls: {\n            spotify: 'ext_url'\n          },\n          href: 'href',\n          id: 'id',\n          images: [{\n            height: 512,\n            width: 512,\n            url: 'url'\n          }],\n          name: 'name',\n          owner: {\n            display_name: 'display_name',\n            external_urls: {\n              spotify: 'string'\n            },\n            href: 'string;',\n            id: 'string',\n            type: 'string',\n            uri: 'string'\n          },\n          primary_color: null,\n          public: null,\n          snapshot_id: 'string',\n          tracks: {\n            href: 'string',\n            total: 1,\n            items: [{\n              added_at: 'asd',\n              added_by: {\n                external_urls: {\n                  spotify: 'string'\n                },\n                href: 'string',\n                id: 'string',\n                type: 'string',\n                uri: 'string'\n              },\n              is_local: false,\n              primary_color: null,\n              track: {\n                album: {\n                  album_type: 'string',\n                  artists: [{\n                    external_urls: {\n                      spotify: 'string'\n                    },\n                    href: 'string',\n                    id: 'string',\n                    name: 'string',\n                    type: 'string',\n                    uri: 'string'\n                  }],\n                  available_markets: ['string'],\n                  external_urls: {\n                    spotify: 'string'\n                  },\n                  href: 'string',\n                  id: 'string',\n                  images: [{\n                    height: 512,\n                    width: 512,\n                    url: 'string'\n                  }],\n                  name: 'string',\n                  release_date: 'string',\n                  release_date_precision: 'string',\n                  total_tracks: 1,\n                  type: 'string',\n                  uri: 'string'\n                },\n                artists: [{\n                  external_urls: {\n                    spotify: 'string'\n                  },\n                  href: 'string',\n                  id: 'string',\n                  name: 'string',\n                  type: 'string',\n                  uri: 'string'\n                }],\n                available_markets: ['', ''],\n                disc_number: 1,\n                duration_ms: 240000,\n                episode: false,\n                explicit: true,\n                external_ids: {\n                  isrc: 'string'\n                },\n                external_urls: {\n                  spotify: 'string'\n                },\n                href: 'string',\n                id: 'string',\n                is_local: false,\n                name: 'string',\n                popularity: 100,\n                preview_url: 'string',\n                track: true,\n                track_number: 1,\n                type: 'string',\n                uri: 'string'\n              },\n              video_thumbnail: {\n                url: 'string'\n              }\n            }],\n            limit: 10,\n            next: 'string',\n            offset: 2,\n            previous: null\n          },\n          type: 'string',\n          uri: 'string'\n        }],\n        limit: 5,\n        next: null,\n        offset: 2,\n        previous: null,\n        total: 1\n      }\n    };\n\n    if (data) {\n      var _data$playlists;\n\n      initPlaylists(data === null || data === void 0 ? void 0 : (_data$playlists = data.playlists) === null || _data$playlists === void 0 ? void 0 : _data$playlists.items);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.App,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [playlists && /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: playlists && /*#__PURE__*/_jsxDEV(Playlists, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/playlist/:id\",\n        children: /*#__PURE__*/_jsxDEV(PlaylistDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    playlists: state.playlists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initPlaylists: data => dispatch({\n      type: \"init\",\n      playlists: data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/developing/spotify-like-web-main/src/App.tsx"],"names":["useEffect","styles","SideBar","Player","Playlists","PlaylistDetail","connect","BrowserRouter","Router","Route","App","playlists","initPlaylists","data","href","items","collaborative","description","external_urls","spotify","id","images","height","width","url","name","owner","display_name","type","uri","primary_color","public","snapshot_id","tracks","total","added_at","added_by","is_local","track","album","album_type","artists","available_markets","release_date","release_date_precision","total_tracks","disc_number","duration_ms","episode","explicit","external_ids","isrc","popularity","preview_url","track_number","video_thumbnail","limit","next","offset","previous","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useEffect} from \"react\";\nimport styles from \"./App.module.scss\";\n\nimport SideBar from \"./components/SideBar/SideBar\";\nimport Player from \"./components/Player/Player\";\n\nimport Playlists from \"./pages/Playlists/Playlists\";\nimport PlaylistDetail from \"./pages/PlaylistDetail/PlaylistDetail\";\n\nimport { connect } from \"react-redux\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Playlists as PlaylistsType } from \"./types/Playlists\";\n//import {Track} from \"./types/Track\";\n//import {Playlist} from \"./types/Playlist\";\n\ntype AppProps = {\n  playlists: PlaylistsType;\n  initPlaylists: (data: {\n      owner: { href: string; id: string; display_name: string; type: string; external_urls: { spotify: string }; uri: string }; images: { width: number; url: string; height: number }[]; snapshot_id: string; collaborative: boolean; description: string; primary_color: null; type: string; uri: string; tracks: {\n          next: string; total: number; offset: number; previous: null; limit: number; href: string; items: {\n              video_thumbnail: { url: string }; added_at: string; added_by: { href: string; id: string; type: string; external_urls: { spotify: string }; uri: string }; is_local: boolean; primary_color: null; track: { disc_number: number; album: { images: { width: number; url: string; height: number }[]; available_markets: string[]; release_date_precision: string; type: string; uri: string; total_tracks: number; artists: { name: string; href: string; id: string; type: string; external_urls: { spotify: string }; uri: string }[]; release_date: string; name: string; album_type: string; href: string; id: string; external_urls: { spotify: string } }; available_markets: string[]; episode: boolean; type: string; external_ids: { isrc: string }; uri: string; duration_ms: number; explicit: boolean; artists: { name: string; href: string; id: string; type: string; external_urls: { spotify: string }; uri: string }[]; preview_url: string; popularity: number; name: string; track_number: number; href: string; id: string; is_local: boolean; track: boolean; external_urls: { spotify: string } }\n          }[]\n      }; public: null; name: string; href: string; id: string; external_urls: { spotify: string }\n  }[] | undefined) => void;\n};\n\nconst App = ({ playlists, initPlaylists }: AppProps) => {\n//  const [error, setError] = useState<null | string>();\n/*    const loadPlaylists = useCallback(async () => {\n\n        if (data?.playlists) {\n            initPlaylists(data?.playlists?.items);\n        }, [initPlaylists]);*/\n\n    useEffect(() => {\n        let data = {\n            playlists: {\n                href: 'string',\n                items: [\n                    {\n                        collaborative: false,\n                        description: 'desc',\n                        external_urls: {spotify: 'ext_url'},\n                        href: 'href',\n                        id: 'id',\n                        images: [\n                            {\n                                height: 512,\n                                width: 512,\n                                url: 'url',\n                            }\n                        ],\n                        name: 'name',\n                        owner: {\n                            display_name: 'display_name',\n                            external_urls: {spotify: 'string'},\n                            href: 'string;',\n                            id: 'string',\n                            type: 'string',\n                            uri: 'string'\n                        },\n                        primary_color: null,\n                        public: null,\n                        snapshot_id: 'string',\n                        tracks: {\n                            href: 'string',\n                            total: 1,\n                            items: [\n                                {\n                                    added_at: 'asd',\n                                    added_by: {\n                                        external_urls: {spotify: 'string'},\n                                        href: 'string',\n                                        id: 'string',\n                                        type: 'string',\n                                        uri: 'string',\n                                    },\n                                    is_local: false,\n                                    primary_color: null,\n                                    track: {\n                                        album: {\n                                            album_type: 'string',\n                                            artists: [\n                                                {\n                                                    external_urls: {spotify: 'string'},\n                                                    href: 'string',\n                                                    id: 'string',\n                                                    name: 'string',\n                                                    type: 'string',\n                                                    uri: 'string',\n                                                }\n                                            ],\n                                            available_markets: ['string'],\n                                            external_urls: {spotify: 'string'},\n                                            href: 'string',\n                                            id: 'string',\n                                            images: [\n                                                {\n                                                    height: 512,\n                                                    width: 512,\n                                                    url: 'string',\n                                                }\n                                            ],\n                                            name: 'string',\n                                            release_date: 'string',\n                                            release_date_precision: 'string',\n                                            total_tracks: 1,\n                                            type: 'string',\n                                            uri: 'string',\n                                        },\n                                        artists: [\n                                            {\n                                                external_urls: {spotify: 'string'},\n                                                href: 'string',\n                                                id: 'string',\n                                                name: 'string',\n                                                type: 'string',\n                                                uri: 'string',\n                                            }\n                                        ],\n                                        available_markets: ['', ''],\n                                        disc_number: 1,\n                                        duration_ms: 240000,\n                                        episode: false,\n                                        explicit: true,\n                                        external_ids: {isrc: 'string'},\n                                        external_urls: {spotify: 'string'},\n                                        href: 'string',\n                                        id: 'string',\n                                        is_local: false,\n                                        name: 'string',\n                                        popularity: 100,\n                                        preview_url: 'string',\n                                        track: true,\n                                        track_number: 1,\n                                        type: 'string',\n                                        uri: 'string',\n                                    },\n                                    video_thumbnail: {url: 'string'},\n                                }\n                            ],\n                            limit: 10,\n                            next: 'string',\n                            offset: 2,\n                            previous: null,\n                        },\n                        type: 'string',\n                        uri: 'string',\n                    }\n                ],\n                limit: 5,\n                next: null,\n                offset: 2,\n                previous: null,\n                total: 1,\n            }\n        }\n        if (data) {\n            initPlaylists(data?.playlists?.items);\n        }\n    }, []);\n\n\n    return (\n        <div className={styles.App}>\n          <Router>\n            {playlists && <SideBar/>}\n\n            <Route path=\"/\" exact>\n              {playlists && <Playlists/>}\n            </Route>\n\n            <Route path=\"/playlist/:id\">\n              <PlaylistDetail/>\n            </Route>\n\n            <Player/>\n          </Router>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state: { playlists: PlaylistsType }) => {\n  return {\n    playlists: state.playlists,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: (initPlaylists: { type: string; playlists: PlaylistsType }) => void\n) => {\n  return {\n    initPlaylists: (data: PlaylistsType) =>\n      dispatch({ type: \"init\", playlists: data }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}