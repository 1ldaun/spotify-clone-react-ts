{"ast":null,"code":"var _jsxFileName = \"C:\\\\developing\\\\spotify-like-web-main\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport styles from \"./App.module.scss\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport Player from \"./components/Player/Player\";\nimport Playlists from \"./pages/Playlists/Playlists\";\nimport PlaylistDetail from \"./pages/PlaylistDetail/PlaylistDetail\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  playlists,\n  initPlaylists\n}) => {\n  _s();\n\n  //  const [error, setError] = useState<null | string>();\n\n  /*    const loadPlaylists = useCallback(async () => {\n          let data = {\n              href: 'string',\n              items: Playlist[],\n              limit: numbe,\n              next: null,\n              offset: 2,\n              previous: null,\n              total: 1,\n          }\n          if (data?.playlists) {\n              initPlaylists(data?.playlists?.items);\n          }, [initPlaylists]);*/\n  useEffect(() => {\n    let data = {\n      href: 'string',\n      items: [{\n        collaborative: false,\n        description: 'desc',\n        external_urls: {\n          spotify: 'ext_url'\n        },\n        href: 'href',\n        id: 'id',\n        images: [{\n          height: 512,\n          width: 512,\n          url: 'url'\n        }],\n        name: 'name',\n        owner: {\n          display_name: 'display_name',\n          external_urls: {\n            spotify: 'string'\n          },\n          href: 'string;',\n          id: 'string',\n          type: 'string',\n          uri: 'string'\n        },\n        primary_color: null,\n        public: null,\n        snapshot_id: 'string',\n        tracks: {\n          href: 'string',\n          total: 1,\n          items: [{\n            added_at: 'asd',\n            added_by: {\n              external_urls: {\n                spotify: 'string'\n              },\n              href: 'string',\n              id: 'string',\n              type: 'string',\n              uri: 'string'\n            },\n            is_local: false,\n            primary_color: null,\n            track: {\n              album: {\n                album_type: 'string',\n                artists: [{\n                  external_urls: {\n                    spotify: 'string'\n                  },\n                  href: 'string',\n                  id: 'string',\n                  name: 'string',\n                  type: 'string',\n                  uri: 'string'\n                }],\n                available_markets: ['string'],\n                external_urls: {\n                  spotify: 'string'\n                },\n                href: 'string',\n                id: 'string',\n                images: [{\n                  height: 512,\n                  width: 512,\n                  url: 'string'\n                }],\n                name: 'string',\n                release_date: 'string',\n                release_date_precision: 'string',\n                total_tracks: 1,\n                type: 'string',\n                uri: 'string'\n              },\n              artists: [{\n                external_urls: {\n                  spotify: 'string'\n                },\n                href: 'string',\n                id: 'string',\n                name: 'string',\n                type: 'string',\n                uri: 'string'\n              }],\n              available_markets: ['', ''],\n              disc_number: 1,\n              duration_ms: 240000,\n              episode: false,\n              explicit: true,\n              external_ids: {\n                isrc: 'string'\n              },\n              external_urls: {\n                spotify: 'string'\n              },\n              href: 'string',\n              id: 'string',\n              is_local: false,\n              name: 'string',\n              popularity: 100,\n              preview_url: 'string',\n              track: true,\n              track_number: 1,\n              type: 'string',\n              uri: 'string'\n            },\n            video_thumbnail: {\n              url: 'string'\n            }\n          }],\n          limit: 10,\n          next: 'string',\n          offset: 2,\n          previous: null\n        },\n        type: 'string',\n        uri: 'string'\n      }],\n      limit: 5,\n      next: null,\n      offset: 2,\n      previous: null,\n      total: 1\n    };\n\n    if (data) {\n      initPlaylists(data);\n    }\n  }, [loadPlaylists]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.App,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [playlists && /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: playlists && /*#__PURE__*/_jsxDEV(Playlists, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/playlist/:id\",\n        children: /*#__PURE__*/_jsxDEV(PlaylistDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    playlists: state.playlists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initPlaylists: data => dispatch({\n      type: \"init\",\n      playlists: data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/developing/spotify-like-web-main/src/App.tsx"],"names":["useEffect","styles","SideBar","Player","Playlists","PlaylistDetail","connect","BrowserRouter","Router","Route","App","playlists","initPlaylists","data","href","items","collaborative","description","external_urls","spotify","id","images","height","width","url","name","owner","display_name","type","uri","primary_color","public","snapshot_id","tracks","total","added_at","added_by","is_local","track","album","album_type","artists","available_markets","release_date","release_date_precision","total_tracks","disc_number","duration_ms","episode","explicit","external_ids","isrc","popularity","preview_url","track_number","video_thumbnail","limit","next","offset","previous","loadPlaylists","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useEffect} from \"react\";\nimport styles from \"./App.module.scss\";\n\nimport SideBar from \"./components/SideBar/SideBar\";\nimport Player from \"./components/Player/Player\";\n\nimport Playlists from \"./pages/Playlists/Playlists\";\nimport PlaylistDetail from \"./pages/PlaylistDetail/PlaylistDetail\";\n\nimport { connect } from \"react-redux\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Playlists as PlaylistsType } from \"./types/Playlists\";\n//import {Track} from \"./types/Track\";\n//import {Playlist} from \"./types/Playlist\";\n\ntype AppProps = {\n  playlists: PlaylistsType;\n  initPlaylists: (data: PlaylistsType) => void;\n};\n\nconst App = ({ playlists, initPlaylists }: AppProps) => {\n//  const [error, setError] = useState<null | string>();\n/*    const loadPlaylists = useCallback(async () => {\n        let data = {\n            href: 'string',\n            items: Playlist[],\n            limit: numbe,\n            next: null,\n            offset: 2,\n            previous: null,\n            total: 1,\n        }\n        if (data?.playlists) {\n            initPlaylists(data?.playlists?.items);\n        }, [initPlaylists]);*/\n\n    useEffect(() => {\n        let data = {\n            href: 'string',\n            items: [\n                {\n                    collaborative: false,\n                    description: 'desc',\n                    external_urls: { spotify: 'ext_url' },\n                    href: 'href',\n                    id: 'id',\n                    images: [\n                        {\n                            height: 512,\n                            width: 512,\n                            url: 'url',\n                        }\n                    ],\n                    name: 'name',\n                    owner: {\n                        display_name: 'display_name',\n                        external_urls: { spotify: 'string' },\n                        href: 'string;',\n                        id: 'string',\n                        type: 'string',\n                        uri: 'string'\n                    },\n                    primary_color: null,\n                    public: null,\n                    snapshot_id: 'string',\n                    tracks: {\n                        href: 'string',\n                        total: 1,\n                        items: [\n                            {\n                                added_at: 'asd',\n                                added_by: {\n                                    external_urls: {spotify: 'string'},\n                                    href: 'string',\n                                    id: 'string',\n                                    type: 'string',\n                                    uri: 'string',\n                                },\n                                is_local: false,\n                                primary_color: null,\n                                track: {\n                                    album: {\n                                        album_type: 'string',\n                                        artists: [\n                                            {\n                                                external_urls: {spotify: 'string'},\n                                                href: 'string',\n                                                id: 'string',\n                                                name: 'string',\n                                                type: 'string',\n                                                uri: 'string',\n                                            }\n                                        ],\n                                        available_markets: ['string'],\n                                        external_urls: {spotify: 'string'},\n                                        href: 'string',\n                                        id: 'string',\n                                        images: [\n                                            {\n                                                height: 512,\n                                                width: 512,\n                                                url: 'string',\n                                            }\n                                        ],\n                                        name: 'string',\n                                        release_date: 'string',\n                                        release_date_precision: 'string',\n                                        total_tracks: 1,\n                                        type: 'string',\n                                        uri: 'string',\n                                    },\n                                    artists: [\n                                        {\n                                            external_urls: {spotify: 'string'},\n                                            href: 'string',\n                                            id: 'string',\n                                            name: 'string',\n                                            type: 'string',\n                                            uri: 'string',\n                                        }\n                                    ],\n                                    available_markets: ['',''],\n                                    disc_number: 1,\n                                    duration_ms: 240000,\n                                    episode: false,\n                                    explicit: true,\n                                    external_ids: {isrc: 'string'},\n                                    external_urls: {spotify: 'string'},\n                                    href: 'string',\n                                    id: 'string',\n                                    is_local: false,\n                                    name: 'string',\n                                    popularity: 100,\n                                    preview_url: 'string',\n                                    track: true,\n                                    track_number: 1,\n                                    type: 'string',\n                                    uri: 'string',\n                                },\n                                video_thumbnail: {url: 'string'},\n                            }\n                        ],\n                        limit: 10,\n                        next: 'string',\n                        offset: 2,\n                        previous: null,\n                    },\n                    type: 'string',\n                    uri: 'string',\n                }\n            ],\n            limit: 5,\n            next: null,\n            offset: 2,\n            previous: null,\n            total: 1,\n        }\n        if (data) {\n            initPlaylists(data);\n        }\n    }, [loadPlaylists]);\n\n\n    return (\n        <div className={styles.App}>\n          <Router>\n            {playlists && <SideBar/>}\n\n            <Route path=\"/\" exact>\n              {playlists && <Playlists/>}\n            </Route>\n\n            <Route path=\"/playlist/:id\">\n              <PlaylistDetail/>\n            </Route>\n\n            <Player/>\n          </Router>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state: { playlists: PlaylistsType }) => {\n  return {\n    playlists: state.playlists,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: (initPlaylists: { type: string; playlists: PlaylistsType }) => void\n) => {\n  return {\n    initPlaylists: (data: PlaylistsType) =>\n      dispatch({ type: \"init\", playlists: data }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}